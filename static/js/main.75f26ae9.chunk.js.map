{"version":3,"sources":["todolistitem.js","Todo.js","Account.js","Help.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["ToDoListItem","props","style","fontSize","listItem","Todo","useState","todos","setTodos","list","deleteUser","index","newTodos","splice","alert","className","paddingLeft","paddingRight","size","header","onPressEnter","event","console","log","currentTarget","value","txt","oldArray","type","bordered","dataSource","renderItem","item","Item","color","title","Button","variant","EditOutlined","onConfirm","okText","cancelText","textAlign","map","idx","Account","formik","useFormik","initialValues","full_name","email","password","confirm_password","validationSchema","Yup","min","max","required","oneOf","onSubmit","values","JSON","stringify","handleSubmit","name","onChange","handleChange","errors","touched","Help","Header","Navbar","expand","to","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f26ae9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\n\r\n\r\nfunction ToDoListItem(props) {\r\n    return (\r\n        <li style={{fontSize: '24px'}}>{props.listItem}</li>\r\n    );\r\n}\r\n\r\nexport default ToDoListItem;","import './App.css';\r\nimport React, {useState,useEffect} from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { List, Typography, Divider, Input, Popconfirm, message } from 'antd';\r\nimport ToDoListItem from \"./todolistitem\";\r\nimport { Button} from 'react-bootstrap';\r\nimport {Tooltip } from 'antd';\r\nimport {EditOutlined} from '@ant-design/icons';\r\nimport { Checkbox } from 'antd';\r\n\r\n\r\n\r\n\r\n\r\nfunction Todo() {\r\n  \r\n    const [todos,setTodos]=useState([])\r\n    const [list,setList]=useState([])\r\n  \r\n \r\n    \r\n   \r\nconst deleteUser=index =>{\r\nconst newTodos = [...todos];\r\n    newTodos.splice(index, 1);\r\n    setTodos(newTodos);\r\n    alert(\"Deleted\")\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n \r\n  \r\n\r\n\r\n\r\n\r\n   \r\n\r\n    return (\r\n         \r\n\r\n         \r\n         <div className=\"App\">\r\n      \r\n           <header className=\"App-header\">\r\n           <br/>\r\n           <br/>\r\n           {/* <h1 style={{textAlign:'center'}}>What do you want to do?</h1>*/}\r\n            <br/>\r\n           <div style={{paddingLeft:'10rem',paddingRight:'10rem'}}>\r\n           <List \r\n      size=\"large\"\r\n      header={\r\n          <div>Enter your task here\r\n          \r\n          \r\n       <Input onPressEnter={\r\n       \r\n           (event) => {\r\n                \r\n              \r\n           console.log(event.currentTarget.value)\r\n        \r\n            \r\n                     let txt = event.currentTarget.value\r\n        \r\n                    setTodos(oldArray => [...oldArray, txt])\r\n                    \r\n                    \r\n                    \r\n                   \r\n                   \r\n       \r\n\r\n       \r\n           }}\r\n          \r\n      \r\n        />\r\n           <button type=\"submit\">Submit</button>\r\n       \r\n           \r\n        </div>}\r\n      //footer={<div>Footer</div>}\r\n      bordered\r\n \r\n      dataSource={todos}\r\n      renderItem={(item)=>{ \r\n          return <List.Item>\r\n          \r\n          <span style={{color:'green'}}> <Checkbox ></Checkbox>\r\n          \r\n          \r\n          \r\n          \r\n          <Tooltip title=\"edit\">\r\n     \r\n    <Button variant=\"gray\"><EditOutlined /></Button>{' '}</Tooltip>{item}</span>\r\n\r\n\r\n<Popconfirm\r\n                         title=\"Are you sure?\"\r\n                        onConfirm={deleteUser}\r\n                       \r\n                    \r\n                    \r\n \r\n\r\n                       \r\n                         // onCancel={cancel}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\"\r\n                      >\r\n                         <Button variant=\"danger\">Delete</Button>{' '}\r\n                        \r\n                      </Popconfirm>\r\n                      \r\n                      \r\n                    \r\n          </List.Item>}}\r\n    />\r\n    </div>\r\n    <br/>\r\n    <div style={{textAlign:'center'}}>\r\n    <Button variant=\"danger\">All</Button>{' '}\r\n     <Button variant=\"danger\">Active</Button>{' '}\r\n      <Button variant=\"danger\">Completed</Button>\r\n      </div>\r\n     \r\n           <div>\r\n           <div>\r\n          {/* <h1 style ={{color:'black'}}>Names:</h1>\r\n           <ul>\r\n          {names.map((name)=> {\r\n            return <li key={name} style={{color:'black'}}>{name}</li>})}\r\n          </ul>*/}\r\n           </div>\r\n         \r\n\r\n           </div>\r\n\r\n              \r\n            \r\n      \r\n                 \r\n           \r\n          <ul>\r\n              {list.map((listItem, idx) => {\r\n                  // return <li key={idx}>\r\n                  //     {listItem}\r\n                  // </li>\r\n\r\n                  return <ToDoListItem listItem={listItem} />\r\n              })}\r\n          </ul>\r\n\r\n\r\n        \r\n\r\n             \r\n                 \r\n               \r\n\r\n              \r\n                 <br/>\r\n             \r\n                 \r\n            </header>\r\n           </div>\r\n           \r\n        );\r\n\r\n    \r\n    \r\n}\r\n\r\n\r\nexport default Todo;\r\n\r\n/*import React, { useState, useEffect } from 'react';\r\nimport './Todo.css';\r\n\r\n\r\nfunction Task({ task, index, completeTask, removeTask }) {\r\n    return (\r\n        <div\r\n            className=\"task\"\r\n            style={{ textDecoration: task.completed ? \"line-through\" : \"\" }}\r\n        >\r\n            {task.title}\r\n\r\n            <button style={{ background: \"red\" }} onClick={() => removeTask(index)}>x</button>\r\n            <button onClick={() => completeTask(index)}>Done</button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction CreateTask({ addTask }) {\r\n    const [value, setValue] = useState(\"\");\r\n  \r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTask(value);\r\n        setValue(\"\");\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                value={value}\r\n                placeholder=\"Add a new task\"\r\n                onChange={e => setValue(e.target.value)}\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nfunction Todo() {\r\n    const [tasksRemaining, setTasksRemaining] = useState(0);\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => { setTasksRemaining(tasks.filter(task => !task.completed).length) },[tasks]);\r\n\r\n\r\n    const addTask = title => {\r\n        const newTasks = [...tasks, { title, completed: false }];\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    const completeTask = index => {\r\n        const newTasks = [...tasks];\r\n        newTasks[index].completed = true;\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    const removeTask = index => {\r\n        const newTasks = [...tasks];\r\n        newTasks.splice(index, 1);\r\n        setTasks(newTasks);\r\n    };\r\n\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <div className=\"header\">Pending tasks ({tasksRemaining})</div>\r\n            <div className=\"tasks\">\r\n                {tasks.map((task, index) => (\r\n                    <Task\r\n                    task={task}\r\n                    index={index}\r\n                    completeTask={completeTask}\r\n                    removeTask={removeTask}\r\n                    key={index}\r\n                    />\r\n                ))}\r\n            </div>\r\n            <div className=\"create-task\" >\r\n                <CreateTask addTask={addTask} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;*/\r\n\r\n","/*import React,{useState,useEffect,useRef} from 'react'\r\nimport './App.css';\r\nimport AccountList from './AccountList'\r\nimport { Formik, Field, Form } from 'formik';\r\nexport default function Account() {\r\n\r\n  const nameRef=useRef();\r\n  const emailRef=useRef();\r\n    const [accounts,setAccounts]=useState([])//const accounts=[]\r\n   \r\n    useEffect( ()=>{\r\n        console.log(\"useeffect called\")\r\n        accounts.forEach( (account) =>{\r\n            console.log(JSON.stringify(account))\r\n         })\r\n        }, [accounts])\r\n         \r\n    \r\n \r\n\r\n    let handleClick= ()=>{\r\n      \r\n        setAccounts([...accounts,{'name':nameRef.current.value,'email':emailRef.current.value}])\r\n       \r\n    }\r\n    return (\r\n        <div>\r\n        Name: <input type=\"text\" ref={nameRef} placeholder=\"Enter name\"/><br/>\r\n        Email:  <input type=\"email\" ref={emailRef}  placeholder=\"enter email\" />\r\n        <div align=\"center\"><button className=\"btn btn-danger btn-sm\" type=\"button\" onClick={handleClick}>Click Me</button></div>\r\n        <AccountList accounts={accounts}/>\r\n\r\n        </div>\r\n    )\r\n}*/\r\n\r\n/*import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Formik, Field, Form } from 'formik';\r\n\r\n\r\nconst Account = () => (\r\n  <div>\r\n    <h1>Sign Up</h1>\r\n    <Formik\r\n      initialValues={{\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n      }}\r\n      onSubmit={async (values) => {\r\n        await new Promise((r) => setTimeout(r, 500));\r\n        alert(JSON.stringify(values, null, 2));\r\n      }}\r\n    >\r\n      <Form>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <Field id=\"firstName\" name=\"firstName\" placeholder=\"Jane\" />\r\n\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <Field id=\"lastName\" name=\"lastName\" placeholder=\"Doe\" />\r\n\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"jane@acme.com\"\r\n          type=\"email\"\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </Form>\r\n    </Formik>\r\n  </div>\r\n);\r\nReactDOM.render(<Account />, document.getElementById('root'));\r\nexport default Account*/\r\n\r\n import React from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport default function Account() {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      full_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirm_password: \"\"\r\n    },\r\n    validationSchema: Yup.object({\r\n      full_name: Yup.string()\r\n        .min(2, \"Mininum 2 characters\")\r\n        .max(15, \"Maximum 15 characters\")\r\n        .required(\"Required!\"),\r\n      email: Yup.string()\r\n        .email(\"Invalid email format\")\r\n        .required(\"Required!\"),\r\n      password: Yup.string()\r\n        .min(8, \"Minimum 8 characters\")\r\n        .required(\"Required!\"),\r\n      confirm_password: Yup.string()\r\n        .oneOf([Yup.ref(\"password\")], \"Password's not match\")\r\n        .required(\"Required!\")\r\n    }),\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"signup\">\r\n      <h1>SIGN UP</h1>\r\n\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <div>\r\n          <label>Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"full_name\"\r\n            value={formik.values.full_name}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.full_name && formik.touched.full_name && (\r\n            <p>{formik.errors.full_name}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.email && formik.touched.email && (\r\n            <p>{formik.errors.email}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={formik.values.password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.password && formik.touched.password && (\r\n            <p>{formik.errors.password}</p>\r\n          )}\r\n        </div>\r\n        <div>\r\n          <label>Confirm Password</label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirm_password\"\r\n            value={formik.values.confirm_password}\r\n            onChange={formik.handleChange}\r\n          />\r\n          {formik.errors.confirm_password &&\r\n            formik.touched.confirm_password && (\r\n              <p>{formik.errors.confirm_password}</p>\r\n            )}\r\n        </div>\r\n        <div>\r\n      \r\n        <Button color=\"primary\" type=\"submit\">submit</Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Help() {\r\n  return (\r\n    <div>\r\n      <h1>Help test</h1>\r\n    </div>\r\n  )\r\n}","/*import React from 'react'\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <nav>\r\n           <h2>TODOLIST APP</h2>\r\n          <ul className=\"nav-links\">\r\n         \r\n          \r\n          <Link to =\"/\"><li>Todo</li></Link>\r\n          <Link  to=\"/account\"><li>Account</li></Link>\r\n          <Link to=\"/help\"><li>Help</li></Link>\r\n          </ul>\r\n        </nav>\r\n    )\r\n}*/\r\n/*import React from 'react'\r\nimport {Navbar} from 'react-bootstra'\r\nimport {Link} from 'react-router-dom'\r\nimport './App.css';\r\n\r\n\r\nexport default function Nav() {\r\n    return (\r\n        <Navbar>\r\n  <Navbar.Header>\r\n    <Navbar.Brand>\r\n      <a href=\"#home\">React-Bootstrap</a>\r\n    </Navbar.Brand>\r\n  </Navbar.Header>\r\n  <Nav>\r\n    <NavItem eventKey={1} href=\"#\">\r\n      Link\r\n    </NavItem>\r\n    <NavItem eventKey={2} href=\"#\">\r\n      Link\r\n    </NavItem>\r\n    <NavDropdown eventKey={3} title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n      <MenuItem eventKey={3.1}>Action</MenuItem>\r\n      <MenuItem eventKey={3.2}>Another action</MenuItem>\r\n      <MenuItem eventKey={3.3}>Something else here</MenuItem>\r\n      <MenuItem divider />\r\n      <MenuItem eventKey={3.4}>Separated link</MenuItem>\r\n    </NavDropdown>\r\n  </Nav>\r\n</Navbar>\r\n    )\r\n    }*/\r\n\r\nimport React from 'react'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\n\r\nconst Header= () => {\r\n    return (\r\n        <Navbar className=\"color-nav\"  expand=\"lg\">\r\n            <LinkContainer to=\"/\">\r\n  <Navbar.Brand>My Todoapp</Navbar.Brand>\r\n  </LinkContainer>\r\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n  <Navbar.Collapse id=\"basic-navbar-nav\">\r\n    <Nav className=\"mr-auto\">\r\n        <LinkContainer to=\"/account\">\r\n      <Nav.Link>Account</Nav.Link>\r\n      </LinkContainer>\r\n      <LinkContainer to=\"/help\">\r\n      <Nav.Link>Help</Nav.Link>\r\n      </LinkContainer>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n    )\r\n}\r\nexport default Header","import React from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport Account from './Account';\nimport Help from './Help';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'antd/dist/antd.css';\nimport Header from './Header'\n\n\n\nimport 'antd/dist/antd.css';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route  exact path=\"/\" component={Todo} />\n          <Route path=\"/account\" component={Account} />\n          <Route path=\"/help\" component={Help} />\n\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}